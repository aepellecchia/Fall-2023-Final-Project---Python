# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest

from IPython.display import display, HTML
from ipywidgets import widgets, interact
import pandas as pd
from IPython.display import display

def display_column(dataframe):
    print("Parameters available:")
    columns = dataframe.columns.tolist()
    for idx, column in enumerate(columns):
        print(f"{idx+1}. {column}")
    choice = int(input("\nChoose a parameter to display:"))
    if choice < 1 or choice > len(columns):
        print("Error: Invalid Number")
        return
    chosen_column = dataframe[columns[choice-1]]
    print(f"{columns[choice-1]}")
    print(chosen_column)

df = pd.read_csv('gmail_export_aepellec.csv').sample(20)
display_column(df)
